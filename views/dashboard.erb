<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="/style.css">
  <title></title>
</head>
<body>
<div class="container">
  <h1>Dashboard for <%= current_user.email %></h1>

  <button id="link-btn" class="btn btn-lg btn-primary text-uppercase">Connect with Plaid</button>

  <div id="get-transactions-data"></div>


	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
	<script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
	<script>
      (function($) {
          var handler = Plaid.create({
              apiVersion: 'v2',
              clientName: 'Split Pay',
              env: '<%= PLAID_ENV %>',
              product: ['transactions'],
              key: '<%= PLAID_PUBLIC_KEY %>',
              // webhook: 'https://your-domain.tld/plaid-webhook',
              onSuccess: function(public_token) {
                  $.post('/get_access_token', {
                      public_token: public_token
                  }, function(data) {
                      $('#container').fadeOut('fast', function() {
                          $('#item_id').text(data.item_id);
                          $('#access_token').text(data.access_token);
                          $('#intro').hide();
                          $('#app, #steps').fadeIn('slow');
                      });
                  });
              },
          });
          var accessToken = qs('access_token');
          if (accessToken != null && accessToken != '') {
              $.post('/set_access_token', {
                  access_token: accessToken
              }, function(data) {
                  $('#container').fadeOut('fast', function() {
                      $('#item_id').text(data.item_id);
                      $('#access_token').text(accessToken);
                      $('#intro').hide();
                      $('#app, #steps').fadeIn('slow');
                  });
              });
          }

          $('#link-btn').on('click', function(e) {
              handler.open();
          });

          $('#get-accounts-btn').on('click', function(e) {
              $.get('/accounts', function(data) {
                  $('#get-accounts-data').slideUp(function() {
                      var html = '<tr><td><strong>Name</strong></td><td><strong>Balances</strong></td><td><strong>Subtype</strong></td><td><strong>Mask</strong></td></tr>';
                      data.accounts.accounts.forEach(function(account, idx) {
                          html += '<tr>';
                          html += '<td>' + account.name + '</td>';
                          html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
                          html += '<td>' + account.subtype + '</td>';
                          html += '<td>' + account.mask + '</td>';
                          html += '</tr>';
                      });

                      $(this).html(html).slideDown();
                  });
              });
          });

          $('#get-auth-btn').on('click', function(e) {
              $.get('/auth', function(data) {
                  $('#get-auth-data').slideUp(function() {
                      var authData = data.auth;
                      var html = '<tr><td><strong>Name</strong></td><td><strong>Balance</strong></td><td><strong>Account #</strong></td><td><strong>Routing #</strong></td></tr>';
                      if (authData.numbers.ach.length > 0) {
                          authData.numbers.ach.forEach(function(achNumbers, idx) {
                              // Find the account associated with this set of account and routing numbers
                              var account = authData.accounts.filter(function(a) {
                                  return a.account_id == achNumbers.account_id;
                              })[0];
                              html += '<tr>';
                              html += '<td>' + account.name + '</td>';
                              html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
                              html += '<td>' + achNumbers.account + '</td>';
                              html += '<td>' + achNumbers.routing + '</td>';
                              html += '</tr>';
                          });
                      } else {

                      }
                      $(this).html(html).slideDown();
                  });
              });
          });

          $('#get-identity-btn').on('click', function(e) {
              $.get('/identity', function(data) {
                  $('#get-identity-data').slideUp(function() {
                      var identityData = data.identity.identity;
                      var html = '<tr class="response-row response-row--is-identity"><td><strong>Names</strong></td><td><strong>Emails</strong></td><td><strong>Phone numbers</strong></td><td><strong>Addresses</strong></td></tr><tr class="response-row response-row--is-identity">';
                      html += '<td>';
                      identityData.names.forEach(function(name, idx) {
                          html += name + '<br />';
                      });
                      html += '</td><td>';
                      identityData.emails.forEach(function(email, idx) {
                          html += email.data + '<br />';
                      });
                      html += '</td><td>';
                      identityData.phone_numbers.forEach(function(number, idx) {
                          html += number.data + '<br />';
                      });
                      html += '</td><td>';
                      identityData.addresses.forEach(function(address, idx) {
                          html += address.data.street + '<br />';
                          html += address.data.city + ', ' + address.data.state + ' ' + address.data.zip;
                      });
                      html += '</td></tr>';

                      $(this).html(html).slideDown();
                  });
              });
          });

          $('#get-item-btn').on('click', function(e) {
              $.get('/item', function(data) {
                  $('#get-item-data').slideUp(function() {
                      if (data.error)
                          $(this).html('<p>' + data.error + '</p>').slideDown();
                      else {
                          var html = '';
                          html += '<tr><td>Institution name</td><td>' + data.institution.name + '</td></tr>';
                          html += '<tr><td>Billed products</td><td>' + data.item.billed_products.join(', ') + '</td></tr>';
                          html += '<tr><td>Available products</td><td>' + data.item.available_products.join(', ') + '</td></tr>';

                          $(this).html(html).slideDown();
                      }
                  });
              });
          });

          $('#get-transactions-btn').on('click', function(e) {
              $.get('/transactions', function(data) {
                  if (data.error != null && data.error.error_code != null) {
                      // Format the error
                      var errorHtml = '<div class="inner"><p>' +
                          '<strong>' + data.error.error_code + ':</strong> ' +
                          (data.error.display_message == null ? data.error.error_message : data.error.display_message)  + '</p></div>';

                      if (data.error.error_code === 'PRODUCT_NOT_READY') {
                          // Add additional context for `PRODUCT_NOT_READY` errors
                          errorHtml += '<div class="inner"><p>Note: The PRODUCT_NOT_READY ' +
                              'error is returned when a request to retrieve Transaction data ' +
                              'is made before Plaid finishes the <a href="https://plaid.com/' +
                              'docs/quickstart/#transaction-data-with-webhooks">initial ' +
                              'transaction pull.</a></p></div>';
                      }
                      // Render the error
                      $('#get-transactions-data').slideUp(function() {
                          $(this).slideUp(function() {
                              $(this).html(errorHtml).slideDown();
                          });
                      });
                  } else {
                      $('#get-transactions-data').slideUp(function() {
                          var html = '<tr><td><strong>Name</strong></td><td><strong>Amount</strong></td><td><strong>Date</strong></td></tr>';
                          data.transactions.transactions.forEach(function(txn, idx) {
                              html += '<tr>';
                              html += '<td>' + txn.name + '</td>';
                              html += '<td>$' + txn.amount + '</td>';
                              html += '<td>' + txn.date + '</td>';
                              html += '</tr>';
                          });

                          $(this).slideUp(function() {
                              $(this).html(html).slideDown();
                          });
                      });
                  }
              });
          });

          $('#get-balance-btn').on('click', function(e) {
              $.get('/balance', function(data) {
                  $('#get-balance-data').slideUp(function() {
                      var balanceData = data.balance;
                      var html = '<tr><td><strong>Name</strong></td><td><strong>Balance</strong></td><td><strong>Subtype</strong></td><td><strong>Mask</strong></td></tr>';
                      balanceData.accounts.forEach(function(account, idx) {
                          html += '<tr>';
                          html += '<td>' + account.name + '</td>';
                          html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>'
                          html += '<td>' + account.subtype + '</td>';
                          html += '<td>' + account.mask + '</td>';
                          html += '</tr>';
                      });

                      $(this).html(html).slideDown();
                  });
              });
          });
      })(jQuery);

      function qs(key) {
          key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&"); // escape RegEx meta chars
          var match = location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)"));
          return match && decodeURIComponent(match[1].replace(/\+/g, " "));
      }
  </script>
</div>
</body>
</html>